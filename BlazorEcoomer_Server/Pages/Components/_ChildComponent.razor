@inject IJSRuntime _JSruntime
<div>
    <div class="alert alert-info">
        @Title
    </div>
    @if (DangerContent != null)
    {
        <div class="alert alert-secondary">
            @DangerContent
        </div>
    }
    @if (ChildContent != null)
    {
        <div class="alert alert-secondary">
            @ChildContent
        </div>
    }
</div>
<button class="btn btn-danger" @onclick="ShowMassage">Alert</button>
<input type="text" @attributes="TextInputAttributes" />

<_GrandChildComponent></_GrandChildComponent>
@code {
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public RenderFragment DangerContent { get; set; }
    [Parameter]
    public EventCallback ShowMassage { get; set; }

    [Parameter(CaptureUnmatchedValues =true)]
    public Dictionary<string, object> TextInputAttributes { get; set; } = new Dictionary<string, object>()
    {
        {"required","required"},
        {"placeholder","Plcae holder data from child"},
        {"maxlength","5"}
    };

    public async Task SetSuccessFulAlert()
    {
        await _JSruntime.SetSuccessFulMessageSA("Operation was successfull", "Success", 500);
    }
    public async Task SetErrorFulAlert()
    {
        await _JSruntime.SetErrorFulMessageSA("Operation Failed", "Error", 10000);
    }

}
