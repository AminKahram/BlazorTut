@page "/RazorComponents/Products"
<div class="row">
    <h3 class="text-success">Individual Product</h3>

    <div class="col-6 border p-3">
        <h3>Products Playground</h3>

        <div>
            <select @bind="@SelectedProperty">
                @foreach (var prodProp in Product.ProductsProps)
                {
                    <option value="@prodProp.Key">
                        @prodProp.Key
                    </option>
                }
            </select>
            <br />
        </div>
        <div>
            Price :
            <input type="number" @bind="@Product.Price" @bind:event="oninput" />
            <br />
        </div>
        <div>
            Is Active :
            <input type="checkbox" @bind="@Product.IsActive" @bind:event="onchange" />
            <br />
        </div>
    </div>
    <div class="col-6 border p-3">
        <h3>Products Summery</h3>
        Product Name : @Product.Name<br />
        Action : @Product.IsActive<br />
        Price : @Product.Price<br />
        The Product Is : @(Product.IsActive ? "Active" : "In Active")<br />
        @if (!string.IsNullOrEmpty(SelectedProperty))
        {
            <p>Selected Property : @SelectedProperty </p>
            <p>Selected Property Value : @Product.ProductsProps.FirstOrDefault(p => p.Key == SelectedProperty)?.Value </p>
        }
    </div>
</div>
<div class="row">
    <h3 class="text-success">Product Table</h3>

    <table class="table table-active table-bordered table-hover">
        <thead>
            <tr>
                <td>
                    Product Name
                </td>
                <td>
                    Product Price
                </td>
                <td>
                    Is Active
                </td>
            </tr>
        </thead>
        <tbody>
            @foreach (var prod in lstProduct)
            {
                <tr>
                    <td>
                        @prod.Name
                    </td>
                    <td>
                        <input type="number" @bind-value="@prod.Price" @bind-value:event="oninput">
                    </td>
                    <td>
                        <input type="checkbox" @bind-value="@prod.IsActive" @bind-value:event="onchange">
                    </td>
                </tr> 
            }
        </tbody>
    </table>
    
</div>
<div class="col-6 border p-3">
    <h3>Products Summery</h3>
    @foreach (var prod in lstProduct)
    {
        <p>
            @prod.Name @prod.Price @(prod.IsActive ? "Active" : "In Active")
        </p>
    }

</div>



@code {
    public string SelectedProperty = "";
    ProductTestComp Product = new()
        {
            ID = 1,
            Name = "TesterProduct 1",
            IsActive = true,
            Price = 0.5,
            ProductsProps = new List<ProductsProp>
            {
                new ProductsProp
                {
                    ID = 1,
                    Key = "Color",
                    Value = "Red"
                },
                new ProductsProp
                {
                    ID = 2,
                    Key = "Size",
                    Value = "20 x 10"
                },new ProductsProp
                {
                    ID = 3,
                    Key = "Flavor",
                    Value = "Rose"
                },
            }
        };
    List<ProductTestComp> lstProduct = new();
    protected override async Task OnInitializedAsync()
    {
        lstProduct.Add(new ProductTestComp
            {
                ID = 1,
                Name = "TesterProduct 2",
                IsActive = true,
                Price = 10.5,
                ProductsProps = new List<ProductsProp>
                {
                    new ProductsProp
                    {
                        ID = 1,
                        Key = "Color",
                        Value = "Black"
                    },
                    new ProductsProp
                    {
                        ID = 2,
                        Key = "Size",
                        Value = "20 OZ"
                    },new ProductsProp
                    {
                        ID = 3,
                        Key = "Flavor",
                        Value = "Blackberry"
                    },
                }
            });
        lstProduct.Add(new ProductTestComp
            {
                ID = 1,
                Name = "TesterProduct 1",
                IsActive = true,
                Price = 100.5,
                ProductsProps = new List<ProductsProp>
            {
                new ProductsProp
                {
                    ID = 1,
                    Key = "Color",
                    Value = "white"
                },
                new ProductsProp
                {
                    ID = 2,
                    Key = "Size",
                    Value = "60 x 90"
                },new ProductsProp
                {
                    ID = 3,
                    Key = "Flavor",
                    Value = "Test"
                },
            }
            });
        await Task.CompletedTask;
    }

}
